// pages/api/user/review-eligible.ts
import { NextApiRequest, NextApiResponse } from 'next';
import prisma from '@lib/prisma';

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== 'GET') return res.status(405).json({ error: 'Method not allowed' });

  const { user_id, spot_id } = req.query;

  if (!user_id || !spot_id || typeof user_id !== 'string' || typeof spot_id !== 'string') {
    return res.status(400).json({ error: 'Missing or invalid parameters' });
  }

  try {
    const eligible = await prisma.transaction_detail.findFirst({
      where: {
        is_used: 'verified',
        transaction: {
          user_id,
          transaction_status: 'paid',
        },
        ticket: {
          spot_id,
        },
      },
    });

    return res.status(200).json({ eligible: !!eligible });
  } catch (error) {
    console.error('Error checking review eligibility:', error);
    return res.status(500).json({ error: 'Internal server error' });
  }
}
